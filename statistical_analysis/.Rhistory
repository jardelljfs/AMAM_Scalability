ifelse(x %in% valores_destacados,
paste0("\U03b1", x, "\U03B2"),  # destacar em vermelho
as.character(x))
})
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
#scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167))
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167),
labels = function(x) {
ifelse(x %in% valores_destacados,
paste0("\U03b1", x, "\U03B2"),  # destacar em vermelho
as.character(x))
}) +theme(axis.text.y = element_text(color = ifelse(dados$y %in% valores_destacados, "red", "black")))
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167),
labels = function(x) {
ifelse(x %in% c(124, 167),
paste0("\U03B1", x, "\U03B2"),  # destaque em vermelho
as.character(x))
}) +
theme(axis.text.y = element_text(color = ifelse(dados$tempo %in% c(124, 167), "red", "black")))
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167),
labels = function(x) {
ifelse(x %in% c(124, 167),
paste0("\U03B1", x, "\U03B2"),  # destaque em vermelho
as.character(x))
}) +
theme(axis.text.y = element_text(color = ifelse(dados$tempo %in% c(124, 167), "red", "black")))
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167),
labels = function(x) {
ifelse(x %in% c(124, 167),
paste0("\U03B1", x, "\U03B2"),  # destaque em vermelho
as.character(x))
}) #+
library(ggplot2)
# Dados das tarefas e máquinas
tarefas <- c(1, 17, 7, 73, 3, 35, 5, 58, 8, 2, 24, 4, 46, 6)
tarefas <- c(8, 58, 5, 35, 3, 73, 7, 17, 1, 6, 46, 4, 24, 2)
maquina <- c(rep("Machine 1", 9), rep("Machine 2", 5))
tempo <- c(67, 8, 25, 7, 29, 6, 11, 2, 12, 40, 3, 26, 6, 49)
tempo <- c(12, 3, 11, 6, 29, 7, 25, 8, 67, 49, 6, 26, 4, 40)
setup <- c("1", "1 - 7", "7", "7 - 3", "3", "3 - 5", "5", "5 - 8", "8", "2", "2 - 4", "4", "4 - 6", "6")
setup <- c("job 8 = 12", "setup 5 -> 8 = 2", "job 5", "setup 3 - 5", "job 3", "setup 7 - 3", "job 7", "setup 1 - 7", "job 1", "job 6", "setup 4 - 6", "job 4", "setup 2 - 4", "job 2")
#cores <- ifelse(tarefas %in% c(17, 73, 35, 58, 24, 46), "lightgrey", "blue")
#cores <- rainbow(14)
cores <- c("yellow", "lightgrey", "lightblue", "lightgrey", "lightgreen", "lightgrey", "orange", "lightgrey", "brown", "red",  "lightgrey", "blue", "lightgrey", "green")
# Criar um data frame com os dados
dados <- data.frame(tarefa = tarefas, maquina = maquina, tempo = tempo, setup = setup, cores =cores)
dados$tarefa <- factor(dados$tarefa, levels = tarefas)
valores_destacados <- c(124, 167)
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167))
library(ggplot2)
# Dados das tarefas e máquinas
tarefas <- c(1, 17, 7, 73, 3, 35, 5, 58, 8, 2, 24, 4, 46, 6)
tarefas <- c(8, 58, 5, 35, 3, 73, 7, 17, 1, 6, 46, 4, 24, 2)
maquina <- c(rep("Machine 1", 9), rep("Machine 2", 5))
tempo <- c(67, 8, 25, 7, 29, 6, 11, 2, 12, 40, 3, 26, 6, 49)
tempo <- c(12, 3, 11, 6, 29, 7, 25, 8, 67, 49, 6, 26, 4, 40)
setup <- c("1", "1 - 7", "7", "7 - 3", "3", "3 - 5", "5", "5 - 8", "8", "2", "2 - 4", "4", "4 - 6", "6")
setup <- c("job 8 = 12", "setup 5 -> 8 = 2", "job 5 = 11", "setup 3 - 5", "job 3 = 29", "setup 7 - 3", "job 7 = 25", "setup 1 - 7", "job 1 = 67", "job 6 = 49", "setup 4 - 6", "job 4 = 26", "setup 2 - 4", "job 2 =  40")
#cores <- ifelse(tarefas %in% c(17, 73, 35, 58, 24, 46), "lightgrey", "blue")
#cores <- rainbow(14)
cores <- c("yellow", "lightgrey", "lightblue", "lightgrey", "lightgreen", "lightgrey", "orange", "lightgrey", "brown", "red",  "lightgrey", "blue", "lightgrey", "green")
# Criar um data frame com os dados
dados <- data.frame(tarefa = tarefas, maquina = maquina, tempo = tempo, setup = setup, cores =cores)
dados$tarefa <- factor(dados$tarefa, levels = tarefas)
valores_destacados <- c(124, 167)
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167))
library(ggplot2)
# Dados das tarefas e máquinas
tarefas <- c(1, 17, 7, 73, 3, 35, 5, 58, 8, 2, 24, 4, 46, 6)
tarefas <- c(8, 58, 5, 35, 3, 73, 7, 17, 1, 6, 46, 4, 24, 2)
maquina <- c(rep("Machine 1", 9), rep("Machine 2", 5))
tempo <- c(67, 8, 25, 7, 29, 6, 11, 2, 12, 40, 3, 26, 6, 49)
tempo <- c(12, 3, 11, 6, 29, 7, 25, 8, 67, 49, 6, 26, 4, 40)
setup <- c("1", "1 - 7", "7", "7 - 3", "3", "3 - 5", "5", "5 - 8", "8", "2", "2 - 4", "4", "4 - 6", "6")
setup <- c("job 8 = 12", "setup 5 -> 8 = 2", "job 5 = 11", "setup 3 -> 5 = 6", "job 3 = 29", "setup 7 -> 3 = 7", "job 7 = 25", "setup 1 -> 7 = 8", "job 1 = 67", "job 6 = 49", "setup 4 - 6", "job 4 = 26", "setup 2 - 4", "job 2 =  40")
#cores <- ifelse(tarefas %in% c(17, 73, 35, 58, 24, 46), "lightgrey", "blue")
#cores <- rainbow(14)
cores <- c("yellow", "lightgrey", "lightblue", "lightgrey", "lightgreen", "lightgrey", "orange", "lightgrey", "brown", "red",  "lightgrey", "blue", "lightgrey", "green")
# Criar um data frame com os dados
dados <- data.frame(tarefa = tarefas, maquina = maquina, tempo = tempo, setup = setup, cores =cores)
dados$tarefa <- factor(dados$tarefa, levels = tarefas)
valores_destacados <- c(124, 167)
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167))
library(ggplot2)
# Dados das tarefas e máquinas
tarefas <- c(1, 17, 7, 73, 3, 35, 5, 58, 8, 2, 24, 4, 46, 6)
tarefas <- c(8, 58, 5, 35, 3, 73, 7, 17, 1, 6, 46, 4, 24, 2)
maquina <- c(rep("Machine 1", 9), rep("Machine 2", 5))
tempo <- c(67, 8, 25, 7, 29, 6, 11, 2, 12, 40, 3, 26, 6, 49)
tempo <- c(12, 3, 11, 6, 29, 7, 25, 8, 67, 49, 6, 26, 4, 40)
setup <- c("1", "1 - 7", "7", "7 - 3", "3", "3 - 5", "5", "5 - 8", "8", "2", "2 - 4", "4", "4 - 6", "6")
setup <- c("job 8 = 12", "setup 5 -> 8 = 2", "job 5 = 11", "setup 3 -> 5 = 6", "job 3 = 29", "setup 7 -> 3 = 7", "job 7 = 25", "setup 1 -> 7 = 8", "job 1 = 67", "job 6 = 49", "setup 4 -> 6 = 6", "job 4 = 26", "setup 2 -> 4 = 3", "job 2 =  40")
#cores <- ifelse(tarefas %in% c(17, 73, 35, 58, 24, 46), "lightgrey", "blue")
#cores <- rainbow(14)
cores <- c("yellow", "lightgrey", "lightblue", "lightgrey", "lightgreen", "lightgrey", "orange", "lightgrey", "brown", "red",  "lightgrey", "blue", "lightgrey", "green")
# Criar um data frame com os dados
dados <- data.frame(tarefa = tarefas, maquina = maquina, tempo = tempo, setup = setup, cores =cores)
dados$tarefa <- factor(dados$tarefa, levels = tarefas)
valores_destacados <- c(124, 167)
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167))
library(ggplot2)
# Dados das tarefas e máquinas
tarefas <- c(1, 17, 7, 73, 3, 35, 5, 58, 8, 2, 24, 4, 46, 6)
tarefas <- c(8, 58, 5, 35, 3, 73, 7, 17, 1, 6, 46, 4, 24, 2)
maquina <- c(rep("Machine 1", 9), rep("Machine 2", 5))
tempo <- c(67, 8, 25, 7, 29, 6, 11, 2, 12, 40, 3, 26, 6, 49)
tempo <- c(12, 3, 11, 6, 29, 7, 25, 8, 67, 49, 6, 26, 4, 40)
setup <- c("1", "1 - 7", "7", "7 - 3", "3", "3 - 5", "5", "5 - 8", "8", "2", "2 - 4", "4", "4 - 6", "6")
setup <- c("JOB 8 = 12", "setup 5 -> 8 = 2", "job 5 = 11", "setup 3 -> 5 = 6", "job 3 = 29", "setup 7 -> 3 = 7", "job 7 = 25", "setup 1 -> 7 = 8", "job 1 = 67", "job 6 = 49", "setup 4 -> 6 = 6", "job 4 = 26", "setup 2 -> 4 = 3", "job 2 =  40")
#cores <- ifelse(tarefas %in% c(17, 73, 35, 58, 24, 46), "lightgrey", "blue")
#cores <- rainbow(14)
cores <- c("yellow", "lightgrey", "lightblue", "lightgrey", "lightgreen", "lightgrey", "orange", "lightgrey", "brown", "red",  "lightgrey", "blue", "lightgrey", "green")
# Criar um data frame com os dados
dados <- data.frame(tarefa = tarefas, maquina = maquina, tempo = tempo, setup = setup, cores =cores)
dados$tarefa <- factor(dados$tarefa, levels = tarefas)
valores_destacados <- c(124, 167)
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167))
library(ggplot2)
# Dados das tarefas e máquinas
tarefas <- c(1, 17, 7, 73, 3, 35, 5, 58, 8, 2, 24, 4, 46, 6)
tarefas <- c(8, 58, 5, 35, 3, 73, 7, 17, 1, 6, 46, 4, 24, 2)
maquina <- c(rep("Machine 1", 9), rep("Machine 2", 5))
tempo <- c(67, 8, 25, 7, 29, 6, 11, 2, 12, 40, 3, 26, 6, 49)
tempo <- c(12, 3, 11, 6, 29, 7, 25, 8, 67, 49, 6, 26, 4, 40)
setup <- c("1", "1 - 7", "7", "7 - 3", "3", "3 - 5", "5", "5 - 8", "8", "2", "2 - 4", "4", "4 - 6", "6")
setup <- c("JOB 8 = 12", "SETUP 5 -> 8 = 2", "job 5 = 11", "setup 3 -> 5 = 6", "job 3 = 29", "setup 7 -> 3 = 7", "job 7 = 25", "setup 1 -> 7 = 8", "job 1 = 67", "job 6 = 49", "setup 4 -> 6 = 6", "job 4 = 26", "setup 2 -> 4 = 3", "job 2 =  40")
#cores <- ifelse(tarefas %in% c(17, 73, 35, 58, 24, 46), "lightgrey", "blue")
#cores <- rainbow(14)
cores <- c("yellow", "lightgrey", "lightblue", "lightgrey", "lightgreen", "lightgrey", "orange", "lightgrey", "brown", "red",  "lightgrey", "blue", "lightgrey", "green")
# Criar um data frame com os dados
dados <- data.frame(tarefa = tarefas, maquina = maquina, tempo = tempo, setup = setup, cores =cores)
dados$tarefa <- factor(dados$tarefa, levels = tarefas)
valores_destacados <- c(124, 167)
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167))
library(ggplot2)
# Dados das tarefas e máquinas
tarefas <- c(1, 17, 7, 73, 3, 35, 5, 58, 8, 2, 24, 4, 46, 6)
tarefas <- c(8, 58, 5, 35, 3, 73, 7, 17, 1, 6, 46, 4, 24, 2)
maquina <- c(rep("Machine 1", 9), rep("Machine 2", 5))
tempo <- c(67, 8, 25, 7, 29, 6, 11, 2, 12, 40, 3, 26, 6, 49)
tempo <- c(12, 3, 11, 6, 29, 7, 25, 8, 67, 49, 6, 26, 4, 40)
setup <- c("1", "1 - 7", "7", "7 - 3", "3", "3 - 5", "5", "5 - 8", "8", "2", "2 - 4", "4", "4 - 6", "6")
setup <- c("JOB 8 = 12", "SETUP 5 -> 8 = 2", "JOB 5 = 11", "SETUP 3 -> 5 = 6", "JOB 3 = 29", "SETUP 7 -> 3 = 7", "JOB 7 = 25", "SETUP 1 -> 7 = 8", "JOB 1 = 67", "JOB 6 = 49", "SETUP 4 -> 6 = 6", "JOB 4 = 26", "SETUP 2 -> 4 = 3", "JOB 2 =  40")
#cores <- ifelse(tarefas %in% c(17, 73, 35, 58, 24, 46), "lightgrey", "blue")
#cores <- rainbow(14)
cores <- c("yellow", "lightgrey", "lightblue", "lightgrey", "lightgreen", "lightgrey", "orange", "lightgrey", "brown", "red",  "lightgrey", "blue", "lightgrey", "green")
# Criar um data frame com os dados
dados <- data.frame(tarefa = tarefas, maquina = maquina, tempo = tempo, setup = setup, cores =cores)
dados$tarefa <- factor(dados$tarefa, levels = tarefas)
valores_destacados <- c(124, 167)
# Criar o gráfico de colunas
ggplot(dados, aes(x = maquina, y = tempo, fill = tarefa)) +
geom_col() +
scale_fill_manual(values = cores) +
labs(title = "",
x = "",
y = "Time") +
theme_minimal() +
theme(legend.position = "none") +
geom_text(aes(label = setup), position = position_stack(vjust = 0.5), color = "black", size = 3) +
scale_y_continuous(breaks = c(0, 50, 100, 124, 150, 167))
install.packages("httpuv")
results <- reactive({read.csv("vrp_results.csv", header = T);})
results <- reactive({p <- read.csv("vrp_results.csv", header = T);})
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("curl")
rsconnect::setAccountInfo(name='jardell-jfs',
token='5CC830F4F3FC1FD49387DAA89F44A553',
secret='<SECRET>')
rsconnect::setAccountInfo(name='jardell-jfs', token='5CC830F4F3FC1FD49387DAA89F44A553', secret='LKN69x1HdCjBNmwGPSSV3lV0ybEATNMdiKsh6gFr')
rm(list = ls(all = TRUE))
rm(list = ls(all = TRUE))
melhor <- read.delim("vrp_instances.txt");
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
melhor <- read.delim("vrp_instances.txt");
melhor <- data.frame(melhor, results = melhor$n * 1000 + melhor$fo);
melhor <- melhor %>%
select(-n, -fo)
library(patchwork)
library(ggplot2)
library(magrittr)
library(dplyr)
melhor <- melhor %>%
select(-n, -fo)
colnames(melhor) <- c("instance", "bloco", "best")
rm(list = ls(all = TRUE))
melhor <- read.delim("vrp_instances.txt");
melhor <- data.frame(melhor, results = melhor$n * 1000 + melhor$fo);
melhor <- melhor %>%
select(-n, -fo)
colnames(melhor) <- c("instance", "bloco", "best")
View(melhor)
dados_1800_one <- read.csv("vrp_1_60.csv", sep = ",", dec = ".");
dados_1800_sixty <- read.csv("vrp_1_60_60.csv", sep = ",", dec = ".");
dados_1800_sixty <- dados_1800_sixty %>%
mutate(metodo = ifelse(metodo == 60, "SixtyAgent", metodo))
rm(list = ls(all = TRUE))
melhor <- read.delim("vrp_instances_C.txt");
melhor <- data.frame(melhor, results = melhor$n * 1000 + melhor$fo);
melhor <- melhor %>%
select(-n, -fo)
colnames(melhor) <- c("instance", "bloco", "best")
dados_1800_one <- read.csv("vrp_1_60.csv", sep = ",", dec = ".");
dados_1800_sixty <- read.csv("vrp_1_60_60.csv", sep = ",", dec = ".");
dados_1800_sixty <- dados_1800_sixty %>%
mutate(metodo = ifelse(metodo == 60, "SixtyAgent", metodo))
dados_1800_one <- merge(dados_1800_one, melhor, by.x = "instance", by.y = "instance")
dados_1800_one$gap <- (dados_1800_one$fitness - dados_1800_one$best) / dados_1800_one$best
dados_1800_sixty <- merge(dados_1800_sixty, melhor, by.x = "instance", by.y = "instance")
dados_1800_sixty$gap <- (dados_1800_sixty$fitness - dados_1800_sixty$best) / dados_1800_sixty$best
d_1_1800 <- data.frame(instancia = character(),
tratamento = character(),
time = double(),
results = double(),
gap = double());
d_1_1800 <- data.frame(instancia = dados_1800_one$instance,
tratamento = dados_1800_one$metodo,
time = dados_1800_one$time,
results = dados_1800_one$fitness,
gap = dados_1800_one$gap);
d_60_1800 <- data.frame(instancia = character(),
tratamento = character(),
time = double(),
results = double(),
gap = double());
d_60_1800 <- data.frame(instancia = dados_1800_sixty$instance,
tratamento = dados_1800_sixty$metodo,
time = dados_1800_sixty$time,
results = dados_1800_sixty$fitness,
gap = dados_1800_sixty$gap);
d_60_1800 <- rbind.data.frame(d_1_1800, d_60_1800);
dados_30 <- read.csv("vrp_data.csv", sep = ",", dec = ".");
dados_30 <- merge(dados_30, melhor, by.x = "instance", by.y = "instance")
dados_30$gap <- (dados_30$fitness - dados_30$best) / dados_30$best
d_1_30 <- data.frame(instancia = character(),
tratamento = character(),
time = double(),
results = double(),
gap = double());
d_1_30 <- data.frame(instancia = subset(dados_30, metodo %in% c("OneAgent", "SixtyAgent"), select = instance),
tratamento = subset(dados_30, metodo %in% c("OneAgent", "SixtyAgent"), select = metodo),
time = subset(dados_30, metodo %in% c("OneAgent", "SixtyAgent"), select = time),
results = subset(dados_30, metodo %in% c("OneAgent", "SixtyAgent"), select = fitness),
gap = subset(dados_30, metodo %in% c("OneAgent", "SixtyAgent"), select = gap));
colnames(d_1_30) <- c("instancia", "tratamento", "time", "results", "gap")
d_1800_30 <- rbind.data.frame(subset(d_1_30, tratamento == "SixtyAgent"), subset(d_1_1800, tratamento == "OneAgent"));
d_1_30_m <- data.frame(instancia = character(),
tratamento = character(),
time = double(),
results = double(),
gap = double());
d_1_30_m <- d_1_1800 %>%
group_by(instancia) %>%
mutate(grupo = rep(1:1800, each = 60, length.out = n())) %>%  # Criando um grupo de 60 observações para cada instância
group_by(instancia, grupo) %>%
summarise(results = min(results),
time = max(time),
gap = gap[which.min(results)],
tratamento = tratamento[which.min(results)]) %>%
filter(grupo != 31) %>%  # Removendo as linhas onde grupo é igual a 31
ungroup() %>%
select(-grupo)
d_1_30_m <- rbind.data.frame(d_1_30_m, subset(d_1_30, tratamento == "SixtyAgent"));
t = ggplot(d_60_1800, aes(tratamento, time)) + geom_boxplot() + #ggtitle("1800 x 1800 - Computational Time") +
labs(x = "number of agents", y = "time(s)")
t1 = ggplot(d_1_30, aes(tratamento, time)) + geom_boxplot() + #ggtitle("30 x 30 - Computational Time") +
labs(x = "number of agents", y = "time(s)")
t2 = ggplot(d_1800_30, aes(tratamento, time)) + geom_boxplot() + #ggtitle("1800 x 30 - Computational Time") +
labs(x = "number of agents", y = "time(s)")
t3 = ggplot(d_1_30_m, aes(tratamento, time)) + geom_boxplot() + #ggtitle("Machine 30 x 30 - Computational Time") +
labs(x = "number of agents", y = "time(s)")
(t + t2) / (t1 + t3)
pairwise.t.test(d_60_1800$time, d_60_1800$tratamento, p.adjust.method="bonferroni")
pairwise.t.test(d_1800_30$time, d_1800_30$tratamento, p.adjust.method="bonferroni")
pairwise.t.test(d_1_30$time, d_1_30$tratamento, paired=T, p.adjust.method="bonferroni")
pairwise.t.test(d_1_30_m$time, d_1_30_m$tratamento, p.adjust.method="bonferroni")
library(dplyr)
library(ggplot2)
#library(lmtest)
library(reshape2)
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
melhor <- read.delim("vrp_instances.txt", header = T)
melhor <- data.frame(melhor, results = melhor$n * 1000 + melhor$fo);
results <- read.csv("vrp_results.csv", header = T);
tb_mean <- c(mean(results$one_m_g), mean(results$two_m_g), mean(results$four_m_g), mean(results$eight_m_g),mean(results$ten_m_g),mean(results$twenty_m_g),mean(results$thirty_m_g),mean(results$forty_m_g),mean(results$fifty_m_g),mean(results$sixty_m_g))
tb_min <- c(mean(results$one_g), mean(results$two_g), mean(results$four_g), mean(results$eight_g),mean(results$ten_g),mean(results$twenty_g),mean(results$thirty_g),mean(results$forty_g),mean(results$fifty_g),mean(results$sixty_g))
tb_med <- c(mean(results$one_md_g), mean(results$two_md_g), mean(results$four_md_g), mean(results$eight_md_g), mean(results$ten_md_g), mean(results$twenty_md_g), mean(results$thirty_md_g), mean(results$forty_md_g), mean(results$fifty_md_g), mean(results$sixty_md_g))
tb_mean_time <- c(mean(results$one_m_time), mean(results$two_m_time), mean(results$four_m_time), mean(results$eight_m_time),mean(results$ten_m_time),mean(results$twenty_m_time), mean(results$thirty_m_time), mean(results$forty_m_time), mean(results$fifty_m_time), mean(results$sixty_m_time))
tb_med_time <- c(mean(results$one_md_time), mean(results$two_md_time), mean(results$four_md_time), mean(results$eight_md_time),mean(results$ten_md_time),mean(results$twenty_md_time), mean(results$thirty_md_time),mean(results$forty_md_time), mean(results$fifty_md_time), mean(results$sixty_md_time))
tb_min_time <- c(mean(results$one_time),mean(results$two_time), mean(results$four_time), mean(results$eight_time), mean(results$ten_time), mean(results$twenty_time), mean(results$thirty_time), mean(results$forty_time), mean(results$fifty_time), mean(results$sixty_time))
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n');
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n")
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2, cex.axis = 0.8)
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n');
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n")
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2, cex.axis = 0.8)
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n',
cex.axis = 1.0,     # Aumenta o tamanho dos valores no eixo
cex.lab = 1.0,      # Aumenta o tamanho dos rótulos dos eixos
cex.main = 1.0);
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n", cex = 1.0)
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2, cex.axis = 1.0)
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n',
cex.axis = 1.0,     # Aumenta o tamanho dos valores no eixo
cex.lab = 1.0,      # Aumenta o tamanho dos rótulos dos eixos
cex.main = 1.0);
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n", cex = 1.0)
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2, cex.axis = 1.0)
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n',
cex.axis = 1.0,     # Aumenta o tamanho dos valores no eixo
cex.lab = 1.0,      # Aumenta o tamanho dos rótulos dos eixos
cex.main = 1.0);
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n",
cex = 1.2)
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2,
cex.axis = 1.0)
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n',
cex.axis = 1.0,     # Aumenta o tamanho dos valores no eixo
cex.lab = 1.0,      # Aumenta o tamanho dos rótulos dos eixos
cex.main = 1.0);
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n",
cex = 1.2)
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2,
cex.axis = 1.2)
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n',
cex.axis = 1.0,     # Aumenta o tamanho dos valores no eixo
cex.lab = 1.0,      # Aumenta o tamanho dos rótulos dos eixos
cex.main = 1.0);
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n",
cex = 1.5)
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2,
cex.axis = 1.0)
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n',
cex.axis = 1.2,     # Aumenta o tamanho dos valores no eixo
cex.lab = 1.2,      # Aumenta o tamanho dos rótulos dos eixos
cex.main = 1.2);
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n",
cex = 1.5)
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2,
cex.axis = 1.0)
df <- data.frame(quantidade_agentes = c(1,2,4,8,10,20,30,40,50,60),
melhor= tb_min,
media = tb_mean,
mediana= tb_med )
df <- melt(df,  id.vars = 'quantidade_agentes', variable.name = 'legenda')
plot(df$quantidade_agente,df$value, col = df$legenda, pch = c(rep(19,10),rep(15,10),rep(17,10)), ylab = "gap(%)", xlab = "Number of Agents", xaxt = 'n',
cex.axis = 1.0,     # Aumenta o tamanho dos valores no eixo
cex.lab = 1.2,      # Aumenta o tamanho dos rótulos dos eixos
cex.main = 1.2);
legend("topright",inset=c(0.02,0.05), legend = c("Best", "Average", "Median"), col=c("black", "red", "green"), pch = c(19,15,17), xpd=TRUE, horiz=TRUE, bty="n",
cex = 1.5)
axis(side = 1, at = c(1, 2, 4, 8, 10, 20, 30, 40, 50, 60),
labels = c("One", "Two", "Four", "Eight", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty"),
las = 2,
cex.axis = 1.0)
